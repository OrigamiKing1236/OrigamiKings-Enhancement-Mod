package net.origamiking.mcmods.oem.datagen;

import net.fabricmc.fabric.api.datagen.v1.FabricDataGenerator;
import net.fabricmc.fabric.api.datagen.v1.provider.FabricRecipeProvider;
import net.minecraft.block.Blocks;
import net.minecraft.data.server.RecipeProvider;
import net.minecraft.data.server.recipe.CraftingRecipeJsonBuilder;
import net.minecraft.data.server.recipe.RecipeJsonProvider;
import net.minecraft.data.server.recipe.ShapedRecipeJsonBuilder;
import net.minecraft.item.ItemConvertible;
import net.minecraft.item.Items;
import net.minecraft.recipe.Ingredient;
import net.minecraft.util.Identifier;
import net.origamiking.mcmods.oapi.recipes.ModRecipeProvider;
import net.origamiking.mcmods.oem.armor.materials.CopperArmorMaterial;
import net.origamiking.mcmods.oem.blocks.amethyst.AmethystBlocks;
import net.origamiking.mcmods.oem.blocks.concrete.ConcreteWalls;
import net.origamiking.mcmods.oem.blocks.copper.CopperBlocks;
import net.origamiking.mcmods.oem.blocks.copper.WaxedCopperBlocks;
import net.origamiking.mcmods.oem.blocks.glass.GlassBlocks;
import net.origamiking.mcmods.oem.blocks.leaves.LeafCarpets;
import net.origamiking.mcmods.oem.blocks.leaves.LeafSlabs;
import net.origamiking.mcmods.oem.blocks.leaves.LeafStairs;
import net.origamiking.mcmods.oem.blocks.leaves.LeafWalls;
import net.origamiking.mcmods.oem.blocks.randomblocks.RandomBlocks;
import net.origamiking.mcmods.oem.blocks.sculk.SculkBlocks;
import net.origamiking.mcmods.oem.blocks.vercticalslabs.concrete.ConcreteVSlabs;
import net.origamiking.mcmods.oem.blocks.vercticalslabs.glass.GlassVSlabs;
import net.origamiking.mcmods.oem.blocks.vercticalslabs.stone.StoneVSlabs;
import net.origamiking.mcmods.oem.blocks.vercticalslabs.wood.WoodVSlabs;
import net.origamiking.mcmods.oem.blocks.wood.azalea.AzaleaWoodBlocks;
import net.origamiking.mcmods.oem.blocks.wood.birch.BirchWoodBlocks;
import net.origamiking.mcmods.oem.blocks.wood.crimson.CrimsonWoodBlocks;
import net.origamiking.mcmods.oem.blocks.wood.darkoak.DarkOakWoodBlocks;
import net.origamiking.mcmods.oem.blocks.wood.jungle.JungleWoodBlocks;
import net.origamiking.mcmods.oem.blocks.wood.mangrove.MangroveWoodBlocks;
import net.origamiking.mcmods.oem.blocks.wood.oak.OakWoodBlocks;
import net.origamiking.mcmods.oem.blocks.wood.spruce.SpruceWoodBlocks;
import net.origamiking.mcmods.oem.blocks.wood.warped.WarpedWoodBlocks;
import net.origamiking.mcmods.oem.blocks.wool.black.BlackWool;
import net.origamiking.mcmods.oem.blocks.wool.blue.BlueWool;
import net.origamiking.mcmods.oem.blocks.wool.brown.BrownWool;
import net.origamiking.mcmods.oem.blocks.wool.cyan.CyanWool;
import net.origamiking.mcmods.oem.blocks.wool.gray.GrayWool;
import net.origamiking.mcmods.oem.blocks.wool.green.GreenWool;
import net.origamiking.mcmods.oem.blocks.wool.light_gray.LightGrayWool;
import net.origamiking.mcmods.oem.blocks.wool.lightblue.LightBlueWool;
import net.origamiking.mcmods.oem.blocks.wool.lime.LimeWool;
import net.origamiking.mcmods.oem.blocks.wool.magenta.MagentaWool;
import net.origamiking.mcmods.oem.blocks.wool.orange.OrangeWool;
import net.origamiking.mcmods.oem.blocks.wool.pink.PinkWool;
import net.origamiking.mcmods.oem.blocks.wool.purple.PurpleWool;
import net.origamiking.mcmods.oem.blocks.wool.red.RedWool;
import net.origamiking.mcmods.oem.blocks.wool.white.WhiteWool;
import net.origamiking.mcmods.oem.blocks.wool.yellow.YellowWool;
import net.origamiking.mcmods.oem.items.ModItems;

import java.util.function.Consumer;

public class ModRecipeGenerator extends FabricRecipeProvider {
    public ModRecipeGenerator(FabricDataGenerator dataGenerator) {
        super(dataGenerator);
    }

    @Override
    protected void generateRecipes(Consumer<RecipeJsonProvider> exporter) {
        RecipeProvider.createStairsRecipe(GlassBlocks.GLASS_STAIR, Ingredient.ofItems(Blocks.GLASS));
        RecipeProvider.createSlabRecipe(GlassBlocks.GLASS_SLAB, Ingredient.ofItems(Blocks.GLASS));
        RecipeProvider.createStairsRecipe(GlassBlocks.WHITE_GLASS_STAIR, Ingredient.ofItems(Blocks.WHITE_STAINED_GLASS));
        RecipeProvider.createSlabRecipe(GlassBlocks.WHITE_GLASS_SLAB, Ingredient.ofItems(Blocks.WHITE_STAINED_GLASS));
        RecipeProvider.createStairsRecipe(GlassBlocks.LIGHT_GRAY_GLASS_STAIR, Ingredient.ofItems(Blocks.LIGHT_GRAY_STAINED_GLASS));
        RecipeProvider.createSlabRecipe(GlassBlocks.LIGHT_GRAY_GLASS_SLAB, Ingredient.ofItems(Blocks.LIGHT_GRAY_STAINED_GLASS));
        RecipeProvider.createStairsRecipe(GlassBlocks.GRAY_GLASS_STAIR, Ingredient.ofItems(Blocks.GRAY_STAINED_GLASS));
        RecipeProvider.createSlabRecipe(GlassBlocks.GRAY_GLASS_SLAB, Ingredient.ofItems(Blocks.GRAY_STAINED_GLASS));
        RecipeProvider.createStairsRecipe(GlassBlocks.BLACK_GLASS_STAIR, Ingredient.ofItems(Blocks.BLACK_STAINED_GLASS));
        RecipeProvider.createSlabRecipe(GlassBlocks.BLACK_GLASS_SLAB, Ingredient.ofItems(Blocks.BLACK_STAINED_GLASS));
        RecipeProvider.createStairsRecipe(GlassBlocks.BROWN_GLASS_STAIR, Ingredient.ofItems(Blocks.BROWN_STAINED_GLASS));
        RecipeProvider.createSlabRecipe(GlassBlocks.BROWN_GLASS_SLAB, Ingredient.ofItems(Blocks.BROWN_STAINED_GLASS));
        RecipeProvider.createStairsRecipe(GlassBlocks.RED_GLASS_STAIR, Ingredient.ofItems(Blocks.RED_STAINED_GLASS));
        RecipeProvider.createSlabRecipe(GlassBlocks.RED_GLASS_SLAB, Ingredient.ofItems(Blocks.RED_STAINED_GLASS));
        RecipeProvider.createStairsRecipe(GlassBlocks.ORANGE_GLASS_STAIR, Ingredient.ofItems(Blocks.ORANGE_STAINED_GLASS));
        RecipeProvider.createSlabRecipe(GlassBlocks.ORANGE_GLASS_SLAB, Ingredient.ofItems(Blocks.ORANGE_STAINED_GLASS));
        RecipeProvider.createStairsRecipe(GlassBlocks.YELLOW_GLASS_STAIR, Ingredient.ofItems(Blocks.YELLOW_STAINED_GLASS));
        RecipeProvider.createSlabRecipe(GlassBlocks.YELLOW_GLASS_SLAB, Ingredient.ofItems(Blocks.YELLOW_STAINED_GLASS));
        RecipeProvider.createStairsRecipe(GlassBlocks.LIME_GLASS_STAIR, Ingredient.ofItems(Blocks.LIME_STAINED_GLASS));
        RecipeProvider.createSlabRecipe(GlassBlocks.LIME_GLASS_SLAB, Ingredient.ofItems(Blocks.LIME_STAINED_GLASS));
        RecipeProvider.createStairsRecipe(GlassBlocks.GREEN_GLASS_STAIR, Ingredient.ofItems(Blocks.GREEN_STAINED_GLASS));
        RecipeProvider.createSlabRecipe(GlassBlocks.GREEN_GLASS_SLAB, Ingredient.ofItems(Blocks.GREEN_STAINED_GLASS));
        RecipeProvider.createStairsRecipe(GlassBlocks.CYAN_GLASS_STAIR, Ingredient.ofItems(Blocks.CYAN_STAINED_GLASS));
        RecipeProvider.createSlabRecipe(GlassBlocks.CYAN_GLASS_SLAB, Ingredient.ofItems(Blocks.CYAN_STAINED_GLASS));
        RecipeProvider.createStairsRecipe(GlassBlocks.LIGHT_BLUE_GLASS_STAIR, Ingredient.ofItems(Blocks.LIGHT_BLUE_STAINED_GLASS));
        RecipeProvider.createSlabRecipe(GlassBlocks.LIGHT_BLUE_GLASS_SLAB, Ingredient.ofItems(Blocks.LIGHT_BLUE_STAINED_GLASS));
        RecipeProvider.createStairsRecipe(GlassBlocks.BLUE_GLASS_STAIR, Ingredient.ofItems(Blocks.BLUE_STAINED_GLASS));
        RecipeProvider.createSlabRecipe(GlassBlocks.BLUE_GLASS_SLAB, Ingredient.ofItems(Blocks.BLUE_STAINED_GLASS));
        RecipeProvider.createStairsRecipe(GlassBlocks.PURPLE_GLASS_STAIR, Ingredient.ofItems(Blocks.PURPLE_STAINED_GLASS));
        RecipeProvider.createSlabRecipe(GlassBlocks.PURPLE_GLASS_SLAB, Ingredient.ofItems(Blocks.PURPLE_STAINED_GLASS));
        RecipeProvider.createStairsRecipe(GlassBlocks.MAGENTA_GLASS_STAIR, Ingredient.ofItems(Blocks.MAGENTA_STAINED_GLASS));
        RecipeProvider.createSlabRecipe(GlassBlocks.MAGENTA_GLASS_SLAB, Ingredient.ofItems(Blocks.MAGENTA_STAINED_GLASS));
        RecipeProvider.createStairsRecipe(GlassBlocks.PINK_GLASS_STAIR, Ingredient.ofItems(Blocks.PINK_STAINED_GLASS));
        RecipeProvider.createSlabRecipe(GlassBlocks.PINK_GLASS_SLAB, Ingredient.ofItems(Blocks.PINK_STAINED_GLASS));
        RecipeProvider.createSlabRecipe(RandomBlocks.CALSITE_SLAB, Ingredient.ofItems(Blocks.CALCITE));
        RecipeProvider.createStairsRecipe(RandomBlocks.CALSITE_STAIRS, Ingredient.ofItems(Blocks.CALCITE));
        RecipeProvider.createSlabRecipe(RandomBlocks.TUFF_SLAB, Ingredient.ofItems(Blocks.TUFF));
        RecipeProvider.createStairsRecipe(RandomBlocks.TUFF_STAIRS, Ingredient.ofItems(Blocks.TUFF));
        RecipeProvider.createSlabRecipe(RandomBlocks.SMOOTH_BASALT_SLAB, Ingredient.ofItems(Blocks.SMOOTH_BASALT));
        RecipeProvider.createStairsRecipe(RandomBlocks.SMOOTH_BASALT_STAIRS, Ingredient.ofItems(Blocks.SMOOTH_BASALT));
        RecipeProvider.createSlabRecipe(RandomBlocks.NETHERRACK_SLAB, Ingredient.ofItems(Blocks.NETHERRACK));
        RecipeProvider.createStairsRecipe(RandomBlocks.NETHERRACK_STAIRS, Ingredient.ofItems(Blocks.NETHERRACK));
        RecipeProvider.createSlabRecipe(RandomBlocks.DRIPSTONE_SLAB, Ingredient.ofItems(Blocks.DRIPSTONE_BLOCK));
        RecipeProvider.createStairsRecipe(RandomBlocks.DRIPSTONE_STAIRS, Ingredient.ofItems(Blocks.DRIPSTONE_BLOCK));
        RecipeProvider.createSlabRecipe(RandomBlocks.SNOW_SLAB, Ingredient.ofItems(Blocks.SNOW_BLOCK));
        RecipeProvider.createStairsRecipe(RandomBlocks.SNOW_STAIRS, Ingredient.ofItems(Blocks.SNOW_BLOCK));
        RecipeProvider.offerWallRecipe(exporter, AmethystBlocks.AMETHYST_WALL, Blocks.AMETHYST_BLOCK);
        RecipeProvider.offerWallRecipe(exporter, RandomBlocks.CALSITE_WALL, Blocks.CALCITE);
        RecipeProvider.offerWallRecipe(exporter, RandomBlocks.TUFF_WALL, Blocks.TUFF);
        RecipeProvider.offerWallRecipe(exporter, RandomBlocks.SMOOTH_BASALT_WALL, Blocks.SMOOTH_BASALT);
        RecipeProvider.offerWallRecipe(exporter, RandomBlocks.NETHERRACK_WALL, Blocks.NETHERRACK);
        RecipeProvider.offerWallRecipe(exporter, RandomBlocks.DRIPSTONE_WALL, Blocks.DRIPSTONE_BLOCK);
        RecipeProvider.offerWallRecipe(exporter, RandomBlocks.SNOW_WALL, Blocks.SNOW_BLOCK);
        RecipeProvider.createStairsRecipe(SculkBlocks.SCULK_STAIR, Ingredient.ofItems(Blocks.SCULK));
        RecipeProvider.createSlabRecipe(SculkBlocks.SCULK_SLAB, Ingredient.ofItems(Blocks.SCULK));
        offerBarRecipe(exporter, CopperBlocks.COPPER_BARS, Blocks.COPPER_BLOCK);
        offerBarRecipe(exporter, CopperBlocks.EXPOSED_COPPER_BARS, Blocks.EXPOSED_COPPER);
        offerBarRecipe(exporter, CopperBlocks.WEATHERED_COPPER_BARS, Blocks.WEATHERED_COPPER);
        offerBarRecipe(exporter, CopperBlocks.OXIDIZED_COPPER_BARS, Blocks.OXIDIZED_COPPER);
        RecipeProvider.createPressurePlateRecipe(CopperBlocks.COPPER_PRESSURE_PLATE, Ingredient.ofItems(Blocks.COPPER_BLOCK));
        RecipeProvider.createPressurePlateRecipe(CopperBlocks.EXPOSED_COPPER_PRESSURE_PLATE, Ingredient.ofItems(Blocks.EXPOSED_COPPER));
        RecipeProvider.createPressurePlateRecipe(CopperBlocks.WEATHERED_COPPER_PRESSURE_PLATE, Ingredient.ofItems(Blocks.WEATHERED_COPPER));
        RecipeProvider.createPressurePlateRecipe(CopperBlocks.OXIDIZED_COPPER_PRESSURE_PLATE, Ingredient.ofItems(Blocks.OXIDIZED_COPPER));
        ModRecipeProvider.offerButtonRecipe(exporter, CopperBlocks.COPPER_BUTTON, Blocks.COPPER_BLOCK);
        ModRecipeProvider.offerButtonRecipe(exporter, CopperBlocks.EXPOSED_COPPER_BUTTON, Blocks.EXPOSED_COPPER);
        ModRecipeProvider.offerButtonRecipe(exporter, CopperBlocks.WEATHERED_COPPER_BUTTON, Blocks.WEATHERED_COPPER);
        ModRecipeProvider.offerButtonRecipe(exporter, CopperBlocks.OXIDIZED_COPPER_BUTTON, Blocks.OXIDIZED_COPPER);
        RecipeProvider.createDoorRecipe(CopperBlocks.COPPER_DOOR, Ingredient.ofItems(Blocks.COPPER_BLOCK));
        RecipeProvider.createTrapdoorRecipe(CopperBlocks.COPPER_TRAPDOOR, Ingredient.ofItems(Blocks.COPPER_BLOCK));
        RecipeProvider.offerStonecuttingRecipe(exporter, CopperBlocks.COPPER_LANTERN, Blocks.COPPER_BLOCK);
        RecipeProvider.offerStonecuttingRecipe(exporter, CopperBlocks.EXPOSED_COPPER_LANTERN, Blocks.EXPOSED_COPPER);
        RecipeProvider.offerStonecuttingRecipe(exporter, CopperBlocks.WEATHERED_COPPER_LANTERN, Blocks.WEATHERED_COPPER);
        RecipeProvider.offerStonecuttingRecipe(exporter, CopperBlocks.OXIDIZED_COPPER_LANTERN, Blocks.OXIDIZED_COPPER);
        RecipeProvider.createStairsRecipe(LeafStairs.OAK_LEAVES_STAIRS, Ingredient.ofItems(Blocks.OAK_LEAVES));
        RecipeProvider.createStairsRecipe(LeafStairs.SPRUCE_LEAVES_STAIRS, Ingredient.ofItems(Blocks.SPRUCE_LEAVES));
        RecipeProvider.createStairsRecipe(LeafStairs.BIRCH_LEAVES_STAIRS, Ingredient.ofItems(Blocks.BIRCH_LEAVES));
        RecipeProvider.createStairsRecipe(LeafStairs.ACACIA_LEAVES_STAIRS, Ingredient.ofItems(Blocks.ACACIA_LEAVES));
        RecipeProvider.createStairsRecipe(LeafStairs.JUNGLE_LEAVES_STAIRS, Ingredient.ofItems(Blocks.JUNGLE_LEAVES));
        RecipeProvider.createStairsRecipe(LeafStairs.DARK_OAK_LEAVES_STAIRS, Ingredient.ofItems(Blocks.DARK_OAK_LEAVES));
        RecipeProvider.createStairsRecipe(LeafStairs.MANGROVE_LEAVES_STAIRS, Ingredient.ofItems(Blocks.MANGROVE_LEAVES));
        RecipeProvider.createSlabRecipe(WhiteWool.WHITE_WOOL_SLAB, Ingredient.ofItems(Blocks.WHITE_WOOL));
        RecipeProvider.createStairsRecipe(WhiteWool.WHITE_WOOL_STAIRS, Ingredient.ofItems(Blocks.WHITE_WOOL));
        RecipeProvider.offerWallRecipe(exporter, WhiteWool.WHITE_WOOL_WALL, Blocks.WHITE_WOOL);
        RecipeProvider.createSlabRecipe(LightGrayWool.LIGHT_GRAY_WOOL_SLAB, Ingredient.ofItems(Blocks.LIGHT_GRAY_WOOL));
        RecipeProvider.createStairsRecipe(LightGrayWool.LIGHT_GRAY_WOOL_STAIRS, Ingredient.ofItems(Blocks.LIGHT_GRAY_WOOL));
        RecipeProvider.offerWallRecipe(exporter, LightGrayWool.LIGHT_GRAY_WOOL_WALL, Blocks.LIGHT_GRAY_WOOL);
        RecipeProvider.createSlabRecipe(GrayWool.GRAY_WOOL_SLAB, Ingredient.ofItems(Blocks.GRAY_WOOL));
        RecipeProvider.createStairsRecipe(GrayWool.GRAY_WOOL_STAIRS, Ingredient.ofItems(Blocks.GRAY_WOOL));
        RecipeProvider.offerWallRecipe(exporter, GrayWool.GRAY_WOOL_WALL, Blocks.GRAY_WOOL);
        RecipeProvider.createSlabRecipe(BlackWool.BLACK_WOOL_SLAB, Ingredient.ofItems(Blocks.BLACK_WOOL));
        RecipeProvider.createStairsRecipe(BlackWool.BLACK_WOOL_STAIRS, Ingredient.ofItems(Blocks.BLACK_WOOL));
        RecipeProvider.offerWallRecipe(exporter, BlackWool.BLACK_WOOL_WALL, Blocks.BLACK_WOOL);
        RecipeProvider.createSlabRecipe(BrownWool.BROWN_WOOL_SLAB, Ingredient.ofItems(Blocks.BROWN_WOOL));
        RecipeProvider.createStairsRecipe(BrownWool.BROWN_WOOL_STAIRS, Ingredient.ofItems(Blocks.BROWN_WOOL));
        RecipeProvider.offerWallRecipe(exporter, BrownWool.BROWN_WOOL_WALL, Blocks.BROWN_WOOL);
        RecipeProvider.createSlabRecipe(RedWool.RED_WOOL_SLAB, Ingredient.ofItems(Blocks.RED_WOOL));
        RecipeProvider.createStairsRecipe(RedWool.RED_WOOL_STAIRS, Ingredient.ofItems(Blocks.RED_WOOL));
        RecipeProvider.offerWallRecipe(exporter, RedWool.RED_WOOL_WALL, Blocks.RED_WOOL);
        RecipeProvider.createSlabRecipe(OrangeWool.ORANGE_WOOL_SLAB, Ingredient.ofItems(Blocks.ORANGE_WOOL));
        RecipeProvider.createStairsRecipe(OrangeWool.ORANGE_WOOL_STAIRS, Ingredient.ofItems(Blocks.ORANGE_WOOL));
        RecipeProvider.offerWallRecipe(exporter, OrangeWool.ORANGE_WOOL_WALL, Blocks.ORANGE_WOOL);
        RecipeProvider.createSlabRecipe(YellowWool.YELLOW_WOOL_SLAB, Ingredient.ofItems(Blocks.YELLOW_WOOL));
        RecipeProvider.createStairsRecipe(YellowWool.YELLOW_WOOL_STAIRS, Ingredient.ofItems(Blocks.YELLOW_WOOL));
        RecipeProvider.offerWallRecipe(exporter, YellowWool.YELLOW_WOOL_WALL, Blocks.YELLOW_WOOL);
        RecipeProvider.createSlabRecipe(LimeWool.LIME_WOOL_SLAB, Ingredient.ofItems(Blocks.LIME_WOOL));
        RecipeProvider.createStairsRecipe(LimeWool.LIME_WOOL_STAIRS, Ingredient.ofItems(Blocks.LIME_WOOL));
        RecipeProvider.offerWallRecipe(exporter, LimeWool.LIME_WOOL_WALL, Blocks.LIME_WOOL);
        RecipeProvider.createSlabRecipe(GreenWool.GREEN_WOOL_SLAB, Ingredient.ofItems(Blocks.GREEN_WOOL));
        RecipeProvider.createStairsRecipe(GreenWool.GREEN_WOOL_STAIRS, Ingredient.ofItems(Blocks.GREEN_WOOL));
        RecipeProvider.offerWallRecipe(exporter, GreenWool.GREEN_WOOL_WALL, Blocks.GREEN_WOOL);
        RecipeProvider.createSlabRecipe(CyanWool.CYAN_WOOL_SLAB, Ingredient.ofItems(Blocks.CYAN_WOOL));
        RecipeProvider.createStairsRecipe(CyanWool.CYAN_WOOL_STAIRS, Ingredient.ofItems(Blocks.CYAN_WOOL));
        RecipeProvider.offerWallRecipe(exporter, CyanWool.CYAN_WOOL_WALL, Blocks.CYAN_WOOL);
        RecipeProvider.createSlabRecipe(LightBlueWool.LIGHT_BLUE_WOOL_SLAB, Ingredient.ofItems(Blocks.LIGHT_BLUE_WOOL));
        RecipeProvider.createStairsRecipe(LightBlueWool.LIGHT_BLUE_WOOL_STAIRS, Ingredient.ofItems(Blocks.LIGHT_BLUE_WOOL));
        RecipeProvider.offerWallRecipe(exporter, LightBlueWool.LIGHT_BLUE_WOOL_WALL, Blocks.LIGHT_BLUE_WOOL);
        RecipeProvider.createSlabRecipe(BlueWool.BLUE_WOOL_SLAB, Ingredient.ofItems(Blocks.BLUE_WOOL));
        RecipeProvider.createStairsRecipe(BlueWool.BLUE_WOOL_STAIRS, Ingredient.ofItems(Blocks.BLUE_WOOL));
        RecipeProvider.offerWallRecipe(exporter, BlueWool.BLUE_WOOL_WALL, Blocks.BLUE_WOOL);
        RecipeProvider.createSlabRecipe(PurpleWool.PURPLE_WOOL_SLAB, Ingredient.ofItems(Blocks.PURPLE_WOOL));
        RecipeProvider.createStairsRecipe(PurpleWool.PURPLE_WOOL_STAIRS, Ingredient.ofItems(Blocks.PURPLE_WOOL));
        RecipeProvider.offerWallRecipe(exporter, PurpleWool.PURPLE_WOOL_WALL, Blocks.PURPLE_WOOL);
        RecipeProvider.createSlabRecipe(MagentaWool.MAGENTA_WOOL_SLAB, Ingredient.ofItems(Blocks.MAGENTA_WOOL));
        RecipeProvider.createStairsRecipe(MagentaWool.MAGENTA_WOOL_STAIRS, Ingredient.ofItems(Blocks.MAGENTA_WOOL));
        RecipeProvider.offerWallRecipe(exporter, MagentaWool.MAGENTA_WOOL_WALL, Blocks.MAGENTA_WOOL);
        RecipeProvider.createSlabRecipe(PinkWool.PINK_WOOL_SLAB, Ingredient.ofItems(Blocks.PINK_WOOL));
        RecipeProvider.createStairsRecipe(PinkWool.PINK_WOOL_STAIRS, Ingredient.ofItems(Blocks.PINK_WOOL));
        RecipeProvider.offerWallRecipe(exporter, PinkWool.PINK_WOOL_WALL, Blocks.PINK_WOOL);
        RecipeProvider.createSlabRecipe(LeafSlabs.OAK_LEAVES_SLAB, Ingredient.ofItems(Blocks.OAK_LEAVES));
        RecipeProvider.createSlabRecipe(LeafSlabs.SPRUCE_LEAVES_SLAB, Ingredient.ofItems(Blocks.SPRUCE_LEAVES));
        RecipeProvider.createSlabRecipe(LeafSlabs.BIRCH_LEAVES_SLAB, Ingredient.ofItems(Blocks.BIRCH_LEAVES));
        RecipeProvider.createSlabRecipe(LeafSlabs.JUNGLE_LEAVES_SLAB, Ingredient.ofItems(Blocks.JUNGLE_LEAVES));
        RecipeProvider.createSlabRecipe(LeafSlabs.ACACIA_LEAVES_SLAB, Ingredient.ofItems(Blocks.ACACIA_LEAVES));
        RecipeProvider.createSlabRecipe(LeafSlabs.DARK_OAK_LEAVES_SLAB, Ingredient.ofItems(Blocks.DARK_OAK_LEAVES));
        RecipeProvider.createSlabRecipe(LeafSlabs.MANGROVE_LEAVES_SLAB, Ingredient.ofItems(Blocks.MANGROVE_LEAVES));
        RecipeProvider.offerWallRecipe(exporter, LeafWalls.OAK_LEAVES_WALL, Blocks.OAK_LEAVES);
        RecipeProvider.offerWallRecipe(exporter, LeafWalls.SPRUCE_LEAVES_WALL, Blocks.SPRUCE_LEAVES);
        RecipeProvider.offerWallRecipe(exporter, LeafWalls.BIRCH_LEAVES_WALL, Blocks.BIRCH_LEAVES);
        RecipeProvider.offerWallRecipe(exporter, LeafWalls.JUNGLE_LEAVES_WALL, Blocks.JUNGLE_LEAVES);
        RecipeProvider.offerWallRecipe(exporter, LeafWalls.ACACIA_LEAVES_WALL, Blocks.ACACIA_LEAVES);
        RecipeProvider.offerWallRecipe(exporter, LeafWalls.DARK_OAK_LEAVES_WALL, Blocks.DARK_OAK_LEAVES);
        RecipeProvider.offerWallRecipe(exporter, LeafWalls.MANGROVE_LEAVES_WALL, Blocks.MANGROVE_LEAVES);
        RecipeProvider.createDoorRecipe(CopperBlocks.EXPOSED_COPPER_DOOR, Ingredient.ofItems(Blocks.EXPOSED_COPPER));
        RecipeProvider.createTrapdoorRecipe(CopperBlocks.EXPOSED_COPPER_TRAPDOOR, Ingredient.ofItems(Blocks.EXPOSED_COPPER));
        RecipeProvider.createDoorRecipe(CopperBlocks.WEATHERED_COPPER_DOOR, Ingredient.ofItems(Blocks.WEATHERED_COPPER));
        RecipeProvider.createTrapdoorRecipe(CopperBlocks.WEATHERED_COPPER_TRAPDOOR, Ingredient.ofItems(Blocks.WEATHERED_COPPER));
        RecipeProvider.createDoorRecipe(CopperBlocks.OXIDIZED_COPPER_DOOR, Ingredient.ofItems(Blocks.OXIDIZED_COPPER));
        RecipeProvider.createTrapdoorRecipe(CopperBlocks.OXIDIZED_COPPER_TRAPDOOR, Ingredient.ofItems(Blocks.OXIDIZED_COPPER));
        RecipeProvider.offerWallRecipe(exporter, ConcreteWalls.WHITE_CONCRETE_WALL, Blocks.WHITE_CONCRETE);
        RecipeProvider.offerWallRecipe(exporter, ConcreteWalls.LIGHT_GRAY_CONCRETE_WALL, Blocks.LIGHT_GRAY_CONCRETE);
        RecipeProvider.offerWallRecipe(exporter, ConcreteWalls.GRAY_CONCRETE_WALL, Blocks.GRAY_CONCRETE);
        RecipeProvider.offerWallRecipe(exporter, ConcreteWalls.BLACK_CONCRETE_WALL, Blocks.BLACK_CONCRETE);
        RecipeProvider.offerWallRecipe(exporter, ConcreteWalls.BROWN_CONCRETE_WALL, Blocks.BROWN_CONCRETE);
        RecipeProvider.offerWallRecipe(exporter, ConcreteWalls.RED_CONCRETE_WALL, Blocks.RED_CONCRETE);
        RecipeProvider.offerWallRecipe(exporter, ConcreteWalls.ORANGE_CONCRETE_WALL, Blocks.ORANGE_CONCRETE);
        RecipeProvider.offerWallRecipe(exporter, ConcreteWalls.YELLOW_CONCRETE_WALL, Blocks.YELLOW_CONCRETE);
        RecipeProvider.offerWallRecipe(exporter, ConcreteWalls.LIME_CONCRETE_WALL, Blocks.LIME_CONCRETE);
        RecipeProvider.offerWallRecipe(exporter, ConcreteWalls.GREEN_CONCRETE_WALL, Blocks.GREEN_CONCRETE);
        RecipeProvider.offerWallRecipe(exporter, ConcreteWalls.CYAN_CONCRETE_WALL, Blocks.CYAN_CONCRETE);
        RecipeProvider.offerWallRecipe(exporter, ConcreteWalls.LIGHT_BLUE_CONCRETE_WALL, Blocks.LIGHT_BLUE_CONCRETE);
        RecipeProvider.offerWallRecipe(exporter, ConcreteWalls.BLUE_CONCRETE_WALL, Blocks.BLUE_CONCRETE);
        RecipeProvider.offerWallRecipe(exporter, ConcreteWalls.PURPLE_CONCRETE_WALL, Blocks.PURPLE_CONCRETE);
        RecipeProvider.offerWallRecipe(exporter, ConcreteWalls.MAGENTA_CONCRETE_WALL, Blocks.MAGENTA_CONCRETE);
        RecipeProvider.offerWallRecipe(exporter, ConcreteWalls.PINK_CONCRETE_WALL, Blocks.PINK_CONCRETE);
        RecipeProvider.offerWallRecipe(exporter, SculkBlocks.SCULK_WALL, Blocks.SCULK);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.STONE_VERTICAL_SLAB, Blocks.STONE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.COBBLESTONE_VERTICAL_SLAB, Blocks.COBBLESTONE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.VERTICAL_MOSSY_COBBLESTONE_SLAB, Blocks.MOSSY_COBBLESTONE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.VERTICAL_SMOOTH_STONE_SLAB, Blocks.SMOOTH_STONE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.VERTICAL_STONE_BRICK_SLAB, Blocks.STONE_BRICKS);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.VERTICAL_MOSSY_STONE_BRICK_SLAB, Blocks.MOSSY_STONE_BRICKS);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.VERTICAL_GRANITE_SLAB, Blocks.GRANITE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.VERTICAL_POLISHED_GRANITE_SLAB, Blocks.POLISHED_GRANITE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.VERTICAL_DIORITE_SLAB, Blocks.DIORITE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.VERTICAL_POLISHED_DIORITE_SLAB, Blocks.POLISHED_DIORITE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.VERTICAL_ANDESITE_SLAB, Blocks.ANDESITE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.VERTICAL_POLISHED_ANDESITE_SLAB, Blocks.POLISHED_ANDESITE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.VERTICAL_COBBLED_DEEPSLATE_SLAB, Blocks.COBBLED_DEEPSLATE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.VERTICAL_POLISHED_DEEPSLATE_SLAB, Blocks.POLISHED_DEEPSLATE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.VERTICAL_DEEPSLATE_BRICK_SLAB, Blocks.DEEPSLATE_BRICKS);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.VERTICAL_DEEPSLATE_TILE_SLAB, Blocks.DEEPSLATE_TILES);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.VERTICAL_BRICK_SLAB, Blocks.BRICKS);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.VERTICAL_MUD_BRICK_SLAB, Blocks.MUD_BRICKS);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.VERTICAL_SANDSTONE_SLAB, Blocks.SANDSTONE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.VERTICAL_SMOOTH_SANDSTONE_SLAB, Blocks.SMOOTH_SANDSTONE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.VERTICAL_CUT_SANDSTONE_SLAB, Blocks.CUT_SANDSTONE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.VERTICAL_RED_SANDSTONE_SLAB, Blocks.RED_SANDSTONE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.VERTICAL_SMOOTH_RED_SANDSTONE_SLAB, Blocks.SMOOTH_RED_SANDSTONE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.VERTICAL_CUT_RED_SANDSTONE_SLAB, Blocks.CUT_RED_SANDSTONE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.VERTICAL_PRISMARINE_SLAB, Blocks.PRISMARINE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.VERTICAL_PRISMARINE_BRICK_SLAB, Blocks.PRISMARINE_BRICKS);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.VERTICAL_DARK_PRISMARINE_SLAB, Blocks.DARK_PRISMARINE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.VERTICAL_NETHER_BRICK_SLAB, Blocks.NETHER_BRICKS);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.VERTICAL_RED_NETHER_BRICK_SLAB, Blocks.RED_NETHER_BRICKS);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.VERTICAL_BLACKSTONE_SLAB, Blocks.BLACKSTONE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.VERTICAL_POLISHED_BLACKSTONE_SLAB, Blocks.POLISHED_BLACKSTONE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.VERTICAL_POLISHED_BLACKSTONE_BRICK_SLAB, Blocks.POLISHED_BLACKSTONE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.VERTICAL_ENDSTONE_BRICK_SLAB, Blocks.END_STONE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.VERTICAL_QUARTZ_SLAB, Blocks.QUARTZ_BLOCK);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, StoneVSlabs.VERTICAL_SMOOTH_QUARTZ_SLAB, Blocks.SMOOTH_QUARTZ);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, WoodVSlabs.VERTICAL_OAK_SLAB, Blocks.OAK_PLANKS);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, WoodVSlabs.VERTICAL_SPRUCE_SLAB, Blocks.SPRUCE_PLANKS);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, WoodVSlabs.VERTICAL_BIRCH_SLAB, Blocks.BIRCH_PLANKS);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, WoodVSlabs.VERTICAL_JUNGLE_SLAB, Blocks.JUNGLE_PLANKS);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, WoodVSlabs.VERTICAL_ACACIA_SLAB, Blocks.ACACIA_PLANKS);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, WoodVSlabs.VERTICAL_DARK_OAK_SLAB, Blocks.DARK_OAK_PLANKS);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, WoodVSlabs.VERTICAL_MANGROVE_SLAB, Blocks.MANGROVE_PLANKS);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, WoodVSlabs.VERTICAL_CRIMSON_SLAB, Blocks.CRIMSON_PLANKS);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, WoodVSlabs.VERTICAL_WARPED_SLAB, Blocks.WARPED_PLANKS);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, ConcreteVSlabs.WHITE_CONCRETE_VERTICAL_SLAB, Blocks.WHITE_CONCRETE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, ConcreteVSlabs.LIGHT_GRAY_CONCRETE_VERTICAL_SLAB, Blocks.LIGHT_GRAY_CONCRETE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, ConcreteVSlabs.GRAY_CONCRETE_VERTICAL_SLAB, Blocks.GRAY_CONCRETE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, ConcreteVSlabs.BLACK_CONCRETE_VERTICAL_SLAB, Blocks.BLACK_CONCRETE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, ConcreteVSlabs.BROWN_CONCRETE_VERTICAL_SLAB, Blocks.BROWN_CONCRETE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, ConcreteVSlabs.RED_CONCRETE_VERTICAL_SLAB, Blocks.RED_CONCRETE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, ConcreteVSlabs.ORANGE_CONCRETE_VERTICAL_SLAB, Blocks.ORANGE_CONCRETE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, ConcreteVSlabs.YELLOW_CONCRETE_VERTICAL_SLAB, Blocks.YELLOW_CONCRETE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, ConcreteVSlabs.LIME_CONCRETE_VERTICAL_SLAB, Blocks.LIME_CONCRETE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, ConcreteVSlabs.GREEN_CONCRETE_VERTICAL_SLAB, Blocks.GREEN_CONCRETE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, ConcreteVSlabs.CYAN_CONCRETE_VERTICAL_SLAB, Blocks.CYAN_CONCRETE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, ConcreteVSlabs.LIGHT_BLUE_CONCRETE_VERTICAL_SLAB, Blocks.LIGHT_BLUE_CONCRETE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, ConcreteVSlabs.BLUE_CONCRETE_VERTICAL_SLAB, Blocks.BLUE_CONCRETE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, ConcreteVSlabs.PURPLE_CONCRETE_VERTICAL_SLAB, Blocks.PURPLE_CONCRETE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, ConcreteVSlabs.MAGENTA_CONCRETE_VERTICAL_SLAB, Blocks.MAGENTA_CONCRETE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, ConcreteVSlabs.PINK_CONCRETE_VERTICAL_SLAB, Blocks.PINK_CONCRETE);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, GlassVSlabs.WHITE_GLASS_VERTICAL_SLAB, Blocks.WHITE_STAINED_GLASS);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, GlassVSlabs.LIGHT_GRAY_GLASS_VERTICAL_SLAB, Blocks.LIGHT_GRAY_STAINED_GLASS);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, GlassVSlabs.GRAY_GLASS_VERTICAL_SLAB, Blocks.GRAY_STAINED_GLASS);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, GlassVSlabs.BLACK_GLASS_VERTICAL_SLAB, Blocks.BLACK_STAINED_GLASS);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, GlassVSlabs.BROWN_GLASS_VERTICAL_SLAB, Blocks.BROWN_STAINED_GLASS);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, GlassVSlabs.RED_GLASS_VERTICAL_SLAB, Blocks.RED_STAINED_GLASS);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, GlassVSlabs.ORANGE_GLASS_VERTICAL_SLAB, Blocks.ORANGE_STAINED_GLASS);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, GlassVSlabs.YELLOW_GLASS_VERTICAL_SLAB, Blocks.YELLOW_STAINED_GLASS);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, GlassVSlabs.LIME_GLASS_VERTICAL_SLAB, Blocks.LIME_STAINED_GLASS);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, GlassVSlabs.GREEN_GLASS_VERTICAL_SLAB, Blocks.GREEN_STAINED_GLASS);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, GlassVSlabs.CYAN_GLASS_VERTICAL_SLAB, Blocks.CYAN_STAINED_GLASS);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, GlassVSlabs.LIGHT_BLUE_GLASS_VERTICAL_SLAB, Blocks.LIGHT_BLUE_STAINED_GLASS);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, GlassVSlabs.BLUE_GLASS_VERTICAL_SLAB, Blocks.BLUE_STAINED_GLASS);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, GlassVSlabs.PURPLE_GLASS_VERTICAL_SLAB, Blocks.PURPLE_STAINED_GLASS);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, GlassVSlabs.MAGENTA_GLASS_VERTICAL_SLAB, Blocks.MAGENTA_STAINED_GLASS);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, GlassVSlabs.PINK_GLASS_VERTICAL_SLAB, Blocks.PINK_STAINED_GLASS);
        ModRecipeProvider.offerVerticalSlabRecipe(exporter, GlassVSlabs.GLASS_VERTICAL_SLAB, Blocks.GLASS);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.GLASS_STAIR, Blocks.GLASS, 1);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.GLASS_SLAB, Blocks.GLASS, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.WHITE_GLASS_STAIR, Blocks.WHITE_STAINED_GLASS, 1);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.WHITE_GLASS_SLAB, Blocks.WHITE_STAINED_GLASS, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.LIGHT_GRAY_GLASS_STAIR, Blocks.LIGHT_GRAY_STAINED_GLASS, 1);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.LIGHT_GRAY_GLASS_SLAB, Blocks.LIGHT_GRAY_STAINED_GLASS, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.GRAY_GLASS_STAIR, Blocks.GRAY_STAINED_GLASS, 1);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.GRAY_GLASS_SLAB, Blocks.GRAY_STAINED_GLASS, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.BLACK_GLASS_STAIR, Blocks.BLACK_STAINED_GLASS, 1);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.BLACK_GLASS_SLAB, Blocks.BLACK_STAINED_GLASS, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.BROWN_GLASS_STAIR, Blocks.BROWN_STAINED_GLASS, 1);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.BROWN_GLASS_SLAB, Blocks.BROWN_STAINED_GLASS, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.RED_GLASS_STAIR, Blocks.RED_STAINED_GLASS, 1);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.RED_GLASS_SLAB, Blocks.RED_STAINED_GLASS, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.ORANGE_GLASS_STAIR, Blocks.ORANGE_STAINED_GLASS, 1);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.ORANGE_GLASS_SLAB, Blocks.ORANGE_STAINED_GLASS, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.YELLOW_GLASS_STAIR, Blocks.YELLOW_STAINED_GLASS, 1);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.YELLOW_GLASS_SLAB, Blocks.YELLOW_STAINED_GLASS, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.LIME_GLASS_STAIR, Blocks.LIME_STAINED_GLASS, 1);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.LIME_GLASS_SLAB, Blocks.LIME_STAINED_GLASS, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.GREEN_GLASS_STAIR, Blocks.GREEN_STAINED_GLASS, 1);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.GREEN_GLASS_SLAB, Blocks.GREEN_STAINED_GLASS, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.CYAN_GLASS_STAIR, Blocks.CYAN_STAINED_GLASS, 1);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.CYAN_GLASS_SLAB, Blocks.CYAN_STAINED_GLASS, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.LIGHT_BLUE_GLASS_STAIR, Blocks.LIGHT_BLUE_STAINED_GLASS, 1);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.LIGHT_BLUE_GLASS_SLAB, Blocks.LIGHT_BLUE_STAINED_GLASS, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.BLUE_GLASS_STAIR, Blocks.BLUE_STAINED_GLASS, 1);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.BLUE_GLASS_SLAB, Blocks.BLUE_STAINED_GLASS, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.PURPLE_GLASS_STAIR, Blocks.PURPLE_STAINED_GLASS, 1);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.PURPLE_GLASS_SLAB, Blocks.PURPLE_STAINED_GLASS, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.MAGENTA_GLASS_STAIR, Blocks.MAGENTA_STAINED_GLASS, 1);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.MAGENTA_GLASS_SLAB, Blocks.MAGENTA_STAINED_GLASS, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.PINK_GLASS_STAIR, Blocks.PINK_STAINED_GLASS, 1);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.PINK_GLASS_SLAB, Blocks.PINK_STAINED_GLASS, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, RandomBlocks.CALSITE_SLAB, Blocks.CALCITE, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, RandomBlocks.CALSITE_STAIRS, Blocks.CALCITE);
        RecipeProvider.offerStonecuttingRecipe(exporter, RandomBlocks.TUFF_SLAB, Blocks.TUFF, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, RandomBlocks.TUFF_STAIRS, Blocks.TUFF);
        RecipeProvider.offerStonecuttingRecipe(exporter, RandomBlocks.SMOOTH_BASALT_SLAB, Blocks.SMOOTH_BASALT, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, RandomBlocks.SMOOTH_BASALT_STAIRS, Blocks.SMOOTH_BASALT);
        RecipeProvider.offerStonecuttingRecipe(exporter, RandomBlocks.NETHERRACK_SLAB, Blocks.NETHERRACK, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, RandomBlocks.NETHERRACK_STAIRS, Blocks.NETHERRACK);
        RecipeProvider.offerStonecuttingRecipe(exporter, RandomBlocks.DRIPSTONE_SLAB, Blocks.DRIPSTONE_BLOCK, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, RandomBlocks.DRIPSTONE_STAIRS, Blocks.DRIPSTONE_BLOCK);
        RecipeProvider.offerStonecuttingRecipe(exporter, RandomBlocks.SNOW_SLAB, Blocks.SNOW_BLOCK, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, RandomBlocks.SNOW_STAIRS, Blocks.SNOW_BLOCK);
        RecipeProvider.offerStonecuttingRecipe(exporter, AmethystBlocks.AMETHYST_WALL, Blocks.AMETHYST_BLOCK);
        RecipeProvider.offerStonecuttingRecipe(exporter, RandomBlocks.CALSITE_WALL, Blocks.CALCITE);
        RecipeProvider.offerStonecuttingRecipe(exporter, RandomBlocks.TUFF_WALL, Blocks.TUFF);
        RecipeProvider.offerStonecuttingRecipe(exporter, RandomBlocks.SMOOTH_BASALT_WALL, Blocks.SMOOTH_BASALT);
        RecipeProvider.offerStonecuttingRecipe(exporter, RandomBlocks.NETHERRACK_WALL, Blocks.NETHERRACK);
        RecipeProvider.offerStonecuttingRecipe(exporter, RandomBlocks.DRIPSTONE_WALL, Blocks.DRIPSTONE_BLOCK);
        RecipeProvider.offerStonecuttingRecipe(exporter, RandomBlocks.SNOW_WALL, Blocks.SNOW_BLOCK);
        RecipeProvider.offerStonecuttingRecipe(exporter, SculkBlocks.SCULK_STAIR, Blocks.SCULK);
        RecipeProvider.offerStonecuttingRecipe(exporter, SculkBlocks.SCULK_SLAB, Blocks.SCULK, 2);
        RecipeProvider.offerReversibleCompactingRecipes(exporter, ModItems.COPPER_NUGGET, Items.COPPER_INGOT);
        RecipeProvider.offerStonecuttingRecipe(exporter, CopperBlocks.COPPER_CHAIN, Blocks.COPPER_BLOCK, 6);
        RecipeProvider.offerStonecuttingRecipe(exporter, CopperBlocks.EXPOSED_COPPER_CHAIN, Blocks.EXPOSED_COPPER, 6);
        RecipeProvider.offerStonecuttingRecipe(exporter, CopperBlocks.WEATHERED_COPPER_CHAIN, Blocks.WEATHERED_COPPER, 6);
        RecipeProvider.offerStonecuttingRecipe(exporter, CopperBlocks.OXIDIZED_COPPER_CHAIN, Blocks.OXIDIZED_COPPER, 6);
        RecipeProvider.offerStonecuttingRecipe(exporter, CopperBlocks.COPPER_BARS, Blocks.COPPER_BLOCK, 3);
        RecipeProvider.offerStonecuttingRecipe(exporter, CopperBlocks.EXPOSED_COPPER_BARS, Blocks.EXPOSED_COPPER, 3);
        RecipeProvider.offerStonecuttingRecipe(exporter, CopperBlocks.WEATHERED_COPPER_BARS, Blocks.WEATHERED_COPPER, 3);
        RecipeProvider.offerStonecuttingRecipe(exporter, CopperBlocks.OXIDIZED_COPPER_BARS, Blocks.OXIDIZED_COPPER, 3);
        RecipeProvider.offerStonecuttingRecipe(exporter, CopperBlocks.COPPER_PRESSURE_PLATE, Blocks.COPPER_BLOCK, 8);
        RecipeProvider.offerStonecuttingRecipe(exporter, CopperBlocks.EXPOSED_COPPER_PRESSURE_PLATE, Blocks.EXPOSED_COPPER, 8);
        RecipeProvider.offerStonecuttingRecipe(exporter, CopperBlocks.WEATHERED_COPPER_PRESSURE_PLATE, Blocks.WEATHERED_COPPER, 8);
        RecipeProvider.offerStonecuttingRecipe(exporter, CopperBlocks.OXIDIZED_COPPER_PRESSURE_PLATE, Blocks.OXIDIZED_COPPER, 8);
        RecipeProvider.offerStonecuttingRecipe(exporter, CopperBlocks.COPPER_BUTTON, Blocks.COPPER_BLOCK, 8);
        RecipeProvider.offerStonecuttingRecipe(exporter, CopperBlocks.EXPOSED_COPPER_BUTTON, Blocks.EXPOSED_COPPER, 8);
        RecipeProvider.offerStonecuttingRecipe(exporter, CopperBlocks.WEATHERED_COPPER_BUTTON, Blocks.WEATHERED_COPPER, 8);
        RecipeProvider.offerStonecuttingRecipe(exporter, CopperBlocks.OXIDIZED_COPPER_BUTTON, Blocks.OXIDIZED_COPPER, 8);
        RecipeProvider.offerStonecuttingRecipe(exporter, CopperBlocks.COPPER_DOOR, Blocks.COPPER_BLOCK);
        RecipeProvider.offerStonecuttingRecipe(exporter, CopperBlocks.COPPER_TRAPDOOR, Blocks.COPPER_BLOCK);
        RecipeProvider.offerStonecuttingRecipe(exporter, CopperArmorMaterial.getCopperArmor.COPPER_HELMET, Blocks.COPPER_BLOCK);
        RecipeProvider.offerStonecuttingRecipe(exporter, CopperArmorMaterial.getCopperArmor.COPPER_CHESTPLATE, Blocks.COPPER_BLOCK);
        RecipeProvider.offerStonecuttingRecipe(exporter, CopperArmorMaterial.getCopperArmor.COPPER_LEGGINGS, Blocks.COPPER_BLOCK);
        RecipeProvider.offerStonecuttingRecipe(exporter, CopperArmorMaterial.getCopperArmor.COPPER_BOOTS, Blocks.COPPER_BLOCK);
        //leaves
        RecipeProvider.offerStonecuttingRecipe(exporter, LeafStairs.OAK_LEAVES_STAIRS, Blocks.OAK_LEAVES);
        RecipeProvider.offerStonecuttingRecipe(exporter, LeafStairs.SPRUCE_LEAVES_STAIRS, Blocks.SPRUCE_LEAVES);
        RecipeProvider.offerStonecuttingRecipe(exporter, LeafStairs.BIRCH_LEAVES_STAIRS, Blocks.BIRCH_LEAVES);
        RecipeProvider.offerStonecuttingRecipe(exporter, LeafStairs.ACACIA_LEAVES_STAIRS, Blocks.ACACIA_LEAVES);
        RecipeProvider.offerStonecuttingRecipe(exporter, LeafStairs.JUNGLE_LEAVES_STAIRS, Blocks.JUNGLE_LEAVES);
        RecipeProvider.offerStonecuttingRecipe(exporter, LeafStairs.DARK_OAK_LEAVES_STAIRS, Blocks.DARK_OAK_LEAVES);
        RecipeProvider.offerStonecuttingRecipe(exporter, LeafStairs.MANGROVE_LEAVES_STAIRS, Blocks.MANGROVE_LEAVES);
        //wool
        RecipeProvider.offerStonecuttingRecipe(exporter, WhiteWool.WHITE_WOOL_SLAB, Blocks.WHITE_WOOL, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, WhiteWool.WHITE_WOOL_STAIRS, Blocks.WHITE_WOOL);
        RecipeProvider.offerStonecuttingRecipe(exporter, WhiteWool.WHITE_WOOL_WALL, Blocks.WHITE_WOOL);
        RecipeProvider.offerStonecuttingRecipe(exporter, LightGrayWool.LIGHT_GRAY_WOOL_SLAB, Blocks.LIGHT_GRAY_WOOL, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, LightGrayWool.LIGHT_GRAY_WOOL_STAIRS, Blocks.LIGHT_GRAY_WOOL);
        RecipeProvider.offerStonecuttingRecipe(exporter, LightGrayWool.LIGHT_GRAY_WOOL_WALL, Blocks.LIGHT_GRAY_WOOL);
        RecipeProvider.offerStonecuttingRecipe(exporter, GrayWool.GRAY_WOOL_SLAB, Blocks.GRAY_WOOL, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, GrayWool.GRAY_WOOL_STAIRS, Blocks.GRAY_WOOL);
        RecipeProvider.offerStonecuttingRecipe(exporter, GrayWool.GRAY_WOOL_WALL, Blocks.GRAY_WOOL);
        RecipeProvider.offerStonecuttingRecipe(exporter, BlackWool.BLACK_WOOL_SLAB, Blocks.BLACK_WOOL, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, BlackWool.BLACK_WOOL_STAIRS, Blocks.BLACK_WOOL);
        RecipeProvider.offerStonecuttingRecipe(exporter, BlackWool.BLACK_WOOL_WALL, Blocks.BLACK_WOOL);
        RecipeProvider.offerStonecuttingRecipe(exporter, BrownWool.BROWN_WOOL_SLAB, Blocks.BROWN_WOOL, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, BrownWool.BROWN_WOOL_STAIRS, Blocks.BROWN_WOOL);
        RecipeProvider.offerStonecuttingRecipe(exporter, BrownWool.BROWN_WOOL_WALL, Blocks.BROWN_WOOL);
        RecipeProvider.offerStonecuttingRecipe(exporter, RedWool.RED_WOOL_SLAB, Blocks.RED_WOOL, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, RedWool.RED_WOOL_STAIRS, Blocks.RED_WOOL);
        RecipeProvider.offerStonecuttingRecipe(exporter, RedWool.RED_WOOL_WALL, Blocks.RED_WOOL);
        RecipeProvider.offerStonecuttingRecipe(exporter, OrangeWool.ORANGE_WOOL_SLAB, Blocks.ORANGE_WOOL, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, OrangeWool.ORANGE_WOOL_STAIRS, Blocks.ORANGE_WOOL);
        RecipeProvider.offerStonecuttingRecipe(exporter, OrangeWool.ORANGE_WOOL_WALL, Blocks.ORANGE_WOOL);
        RecipeProvider.offerStonecuttingRecipe(exporter, YellowWool.YELLOW_WOOL_SLAB, Blocks.YELLOW_WOOL, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, YellowWool.YELLOW_WOOL_STAIRS, Blocks.YELLOW_WOOL);
        RecipeProvider.offerStonecuttingRecipe(exporter, YellowWool.YELLOW_WOOL_WALL, Blocks.YELLOW_WOOL);
        RecipeProvider.offerStonecuttingRecipe(exporter, LimeWool.LIME_WOOL_SLAB, Blocks.LIME_WOOL, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, LimeWool.LIME_WOOL_STAIRS, Blocks.LIME_WOOL);
        RecipeProvider.offerStonecuttingRecipe(exporter, LimeWool.LIME_WOOL_WALL, Blocks.LIME_WOOL);
        RecipeProvider.offerStonecuttingRecipe(exporter, GreenWool.GREEN_WOOL_SLAB, Blocks.GREEN_WOOL, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, GreenWool.GREEN_WOOL_STAIRS, Blocks.GREEN_WOOL);
        RecipeProvider.offerStonecuttingRecipe(exporter, GreenWool.GREEN_WOOL_WALL, Blocks.GREEN_WOOL);
        RecipeProvider.offerStonecuttingRecipe(exporter, CyanWool.CYAN_WOOL_SLAB, Blocks.CYAN_WOOL, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, CyanWool.CYAN_WOOL_STAIRS, Blocks.CYAN_WOOL);
        RecipeProvider.offerStonecuttingRecipe(exporter, CyanWool.CYAN_WOOL_WALL, Blocks.CYAN_WOOL);
        RecipeProvider.offerStonecuttingRecipe(exporter, LightBlueWool.LIGHT_BLUE_WOOL_SLAB, Blocks.LIGHT_BLUE_WOOL, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, LightBlueWool.LIGHT_BLUE_WOOL_STAIRS, Blocks.LIGHT_BLUE_WOOL);
        RecipeProvider.offerStonecuttingRecipe(exporter, LightBlueWool.LIGHT_BLUE_WOOL_WALL, Blocks.LIGHT_BLUE_WOOL);
        RecipeProvider.offerStonecuttingRecipe(exporter, BlueWool.BLUE_WOOL_SLAB, Blocks.BLUE_WOOL, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, BlueWool.BLUE_WOOL_STAIRS, Blocks.BLUE_WOOL);
        RecipeProvider.offerStonecuttingRecipe(exporter, BlueWool.BLUE_WOOL_WALL, Blocks.BLUE_WOOL);
        RecipeProvider.offerStonecuttingRecipe(exporter, PurpleWool.PURPLE_WOOL_SLAB, Blocks.PURPLE_WOOL, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, PurpleWool.PURPLE_WOOL_STAIRS, Blocks.PURPLE_WOOL);
        RecipeProvider.offerStonecuttingRecipe(exporter, PurpleWool.PURPLE_WOOL_WALL, Blocks.PURPLE_WOOL);
        RecipeProvider.offerStonecuttingRecipe(exporter, MagentaWool.MAGENTA_WOOL_SLAB, Blocks.MAGENTA_WOOL, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, MagentaWool.MAGENTA_WOOL_STAIRS, Blocks.MAGENTA_WOOL);
        RecipeProvider.offerStonecuttingRecipe(exporter, MagentaWool.MAGENTA_WOOL_WALL, Blocks.MAGENTA_WOOL);
        RecipeProvider.offerStonecuttingRecipe(exporter, PinkWool.PINK_WOOL_SLAB, Blocks.PINK_WOOL, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, PinkWool.PINK_WOOL_STAIRS, Blocks.PINK_WOOL);
        RecipeProvider.offerStonecuttingRecipe(exporter, PinkWool.PINK_WOOL_WALL, Blocks.PINK_WOOL);
        RecipeProvider.offerStonecuttingRecipe(exporter, LeafSlabs.OAK_LEAVES_SLAB, Blocks.OAK_LEAVES, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, LeafSlabs.SPRUCE_LEAVES_SLAB, Blocks.SPRUCE_LEAVES, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, LeafSlabs.BIRCH_LEAVES_SLAB, Blocks.BIRCH_LEAVES, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, LeafSlabs.JUNGLE_LEAVES_SLAB, Blocks.JUNGLE_LEAVES, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, LeafSlabs.ACACIA_LEAVES_SLAB, Blocks.ACACIA_LEAVES, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, LeafSlabs.DARK_OAK_LEAVES_SLAB, Blocks.DARK_OAK_LEAVES, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, LeafSlabs.MANGROVE_LEAVES_SLAB, Blocks.MANGROVE_LEAVES, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, LeafWalls.OAK_LEAVES_WALL, Blocks.OAK_LEAVES);
        RecipeProvider.offerStonecuttingRecipe(exporter, LeafWalls.SPRUCE_LEAVES_WALL, Blocks.SPRUCE_LEAVES);
        RecipeProvider.offerStonecuttingRecipe(exporter, LeafWalls.BIRCH_LEAVES_WALL, Blocks.BIRCH_LEAVES);
        RecipeProvider.offerStonecuttingRecipe(exporter, LeafWalls.JUNGLE_LEAVES_WALL, Blocks.JUNGLE_LEAVES);
        RecipeProvider.offerStonecuttingRecipe(exporter, LeafWalls.ACACIA_LEAVES_WALL, Blocks.ACACIA_LEAVES);
        RecipeProvider.offerStonecuttingRecipe(exporter, LeafWalls.DARK_OAK_LEAVES_WALL, Blocks.DARK_OAK_LEAVES);
        RecipeProvider.offerStonecuttingRecipe(exporter, LeafWalls.MANGROVE_LEAVES_WALL, Blocks.MANGROVE_LEAVES);
        RecipeProvider.offerStonecuttingRecipe(exporter, CopperBlocks.EXPOSED_COPPER_DOOR, Blocks.EXPOSED_COPPER);
        RecipeProvider.offerStonecuttingRecipe(exporter, CopperBlocks.EXPOSED_COPPER_TRAPDOOR, Blocks.EXPOSED_COPPER);
        RecipeProvider.offerStonecuttingRecipe(exporter, CopperBlocks.WEATHERED_COPPER_DOOR, Blocks.WEATHERED_COPPER);
        RecipeProvider.offerStonecuttingRecipe(exporter, CopperBlocks.WEATHERED_COPPER_TRAPDOOR, Blocks.WEATHERED_COPPER);
        RecipeProvider.offerStonecuttingRecipe(exporter, CopperBlocks.OXIDIZED_COPPER_DOOR, Blocks.OXIDIZED_COPPER);
        RecipeProvider.offerStonecuttingRecipe(exporter, CopperBlocks.OXIDIZED_COPPER_TRAPDOOR, Blocks.OXIDIZED_COPPER);
        RecipeProvider.offerStonecuttingRecipe(exporter, ConcreteWalls.WHITE_CONCRETE_WALL, Blocks.WHITE_CONCRETE);
        RecipeProvider.offerStonecuttingRecipe(exporter, ConcreteWalls.LIGHT_GRAY_CONCRETE_WALL, Blocks.LIGHT_GRAY_CONCRETE);
        RecipeProvider.offerStonecuttingRecipe(exporter, ConcreteWalls.GRAY_CONCRETE_WALL, Blocks.GRAY_CONCRETE);
        RecipeProvider.offerStonecuttingRecipe(exporter, ConcreteWalls.BLACK_CONCRETE_WALL, Blocks.BLACK_CONCRETE);
        RecipeProvider.offerStonecuttingRecipe(exporter, ConcreteWalls.BROWN_CONCRETE_WALL, Blocks.BROWN_CONCRETE);
        RecipeProvider.offerStonecuttingRecipe(exporter, ConcreteWalls.RED_CONCRETE_WALL, Blocks.RED_CONCRETE);
        RecipeProvider.offerStonecuttingRecipe(exporter, ConcreteWalls.ORANGE_CONCRETE_WALL, Blocks.ORANGE_CONCRETE);
        RecipeProvider.offerStonecuttingRecipe(exporter, ConcreteWalls.YELLOW_CONCRETE_WALL, Blocks.YELLOW_CONCRETE);
        RecipeProvider.offerStonecuttingRecipe(exporter, ConcreteWalls.LIME_CONCRETE_WALL, Blocks.LIME_CONCRETE);
        RecipeProvider.offerStonecuttingRecipe(exporter, ConcreteWalls.GREEN_CONCRETE_WALL, Blocks.GREEN_CONCRETE);
        RecipeProvider.offerStonecuttingRecipe(exporter, ConcreteWalls.CYAN_CONCRETE_WALL, Blocks.CYAN_CONCRETE);
        RecipeProvider.offerStonecuttingRecipe(exporter, ConcreteWalls.LIGHT_BLUE_CONCRETE_WALL, Blocks.LIGHT_BLUE_CONCRETE);
        RecipeProvider.offerStonecuttingRecipe(exporter, ConcreteWalls.BLUE_CONCRETE_WALL, Blocks.BLUE_CONCRETE);
        RecipeProvider.offerStonecuttingRecipe(exporter, ConcreteWalls.PURPLE_CONCRETE_WALL, Blocks.PURPLE_CONCRETE);
        RecipeProvider.offerStonecuttingRecipe(exporter, ConcreteWalls.MAGENTA_CONCRETE_WALL, Blocks.MAGENTA_CONCRETE);
        RecipeProvider.offerStonecuttingRecipe(exporter, ConcreteWalls.PINK_CONCRETE_WALL, Blocks.PINK_CONCRETE);
        RecipeProvider.offerStonecuttingRecipe(exporter, SculkBlocks.SCULK_WALL, Blocks.SCULK);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.STONE_VERTICAL_SLAB, Blocks.STONE);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.COBBLESTONE_VERTICAL_SLAB, Blocks.COBBLESTONE);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_MOSSY_COBBLESTONE_SLAB, Blocks.MOSSY_COBBLESTONE);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_SMOOTH_STONE_SLAB, Blocks.SMOOTH_STONE);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_STONE_BRICK_SLAB, Blocks.STONE_BRICKS);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_MOSSY_STONE_BRICK_SLAB, Blocks.MOSSY_STONE_BRICKS);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_GRANITE_SLAB, Blocks.GRANITE);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_POLISHED_GRANITE_SLAB, Blocks.POLISHED_GRANITE);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_DIORITE_SLAB, Blocks.DIORITE);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_POLISHED_DIORITE_SLAB, Blocks.POLISHED_DIORITE);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_ANDESITE_SLAB, Blocks.ANDESITE);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_POLISHED_ANDESITE_SLAB, Blocks.POLISHED_ANDESITE);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_COBBLED_DEEPSLATE_SLAB, Blocks.COBBLED_DEEPSLATE);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_POLISHED_DEEPSLATE_SLAB, Blocks.POLISHED_DEEPSLATE);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_DEEPSLATE_BRICK_SLAB, Blocks.DEEPSLATE_BRICKS);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_DEEPSLATE_TILE_SLAB, Blocks.DEEPSLATE_TILES);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_BRICK_SLAB, Blocks.BRICKS);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_MUD_BRICK_SLAB, Blocks.MUD_BRICKS);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_SANDSTONE_SLAB, Blocks.SANDSTONE);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_SMOOTH_SANDSTONE_SLAB, Blocks.SMOOTH_SANDSTONE);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_CUT_SANDSTONE_SLAB, Blocks.CUT_SANDSTONE);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_RED_SANDSTONE_SLAB, Blocks.RED_SANDSTONE);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_SMOOTH_RED_SANDSTONE_SLAB, Blocks.SMOOTH_RED_SANDSTONE);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_CUT_RED_SANDSTONE_SLAB, Blocks.CUT_RED_SANDSTONE);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_PRISMARINE_SLAB, Blocks.PRISMARINE);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_PRISMARINE_BRICK_SLAB, Blocks.PRISMARINE_BRICKS);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_DARK_PRISMARINE_SLAB, Blocks.DARK_PRISMARINE);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_NETHER_BRICK_SLAB, Blocks.NETHER_BRICKS);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_RED_NETHER_BRICK_SLAB, Blocks.RED_NETHER_BRICKS);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_BLACKSTONE_SLAB, Blocks.BLACKSTONE);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_POLISHED_BLACKSTONE_SLAB, Blocks.POLISHED_BLACKSTONE);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_POLISHED_BLACKSTONE_BRICK_SLAB, Blocks.POLISHED_BLACKSTONE_BRICKS);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_ENDSTONE_BRICK_SLAB, Blocks.END_STONE);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_QUARTZ_SLAB, Blocks.QUARTZ_BLOCK);
        RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_SMOOTH_QUARTZ_SLAB, Blocks.SMOOTH_QUARTZ);
//                RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_CUT_COPPER_SLAB);
//                RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_EXPOSED_CUT_COPPER_SLAB);
//                RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_WEATHERED_CUT_COPPER_SLAB);
//                RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_OXIDIZED_CUT_COPPER_SLAB);
//                RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_WAXED_CUT_COPPER_SLAB);
//                RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_WAXED_EXPOSED_CUT_COPPER_SLAB);
//                RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_WAXED_WEATHERED_CUT_COPPER_SLAB);
//                RecipeProvider.offerStonecuttingRecipe(exporter, StoneVSlabs.VERTICAL_WAXED_OXIDIZED_CUT_COPPER_SLAB);
        RecipeProvider.offerStonecuttingRecipe(exporter, WoodVSlabs.VERTICAL_OAK_SLAB, Blocks.OAK_PLANKS);
        RecipeProvider.offerStonecuttingRecipe(exporter, WoodVSlabs.VERTICAL_SPRUCE_SLAB, Blocks.SPRUCE_PLANKS);
        RecipeProvider.offerStonecuttingRecipe(exporter, WoodVSlabs.VERTICAL_BIRCH_SLAB, Blocks.BIRCH_PLANKS);
        RecipeProvider.offerStonecuttingRecipe(exporter, WoodVSlabs.VERTICAL_JUNGLE_SLAB, Blocks.JUNGLE_PLANKS);
        RecipeProvider.offerStonecuttingRecipe(exporter, WoodVSlabs.VERTICAL_ACACIA_SLAB, Blocks.ACACIA_PLANKS);
        RecipeProvider.offerStonecuttingRecipe(exporter, WoodVSlabs.VERTICAL_DARK_OAK_SLAB, Blocks.DARK_OAK_PLANKS);
        RecipeProvider.offerStonecuttingRecipe(exporter, WoodVSlabs.VERTICAL_MANGROVE_SLAB, Blocks.MANGROVE_PLANKS);
        RecipeProvider.offerStonecuttingRecipe(exporter, WoodVSlabs.VERTICAL_CRIMSON_SLAB, Blocks.CRIMSON_PLANKS);
        RecipeProvider.offerStonecuttingRecipe(exporter, WoodVSlabs.VERTICAL_WARPED_SLAB, Blocks.WARPED_PLANKS);
        RecipeProvider.offerStonecuttingRecipe(exporter, ConcreteVSlabs.WHITE_CONCRETE_VERTICAL_SLAB, Blocks.WHITE_CONCRETE);
        RecipeProvider.offerStonecuttingRecipe(exporter, ConcreteVSlabs.LIGHT_GRAY_CONCRETE_VERTICAL_SLAB, Blocks.LIGHT_GRAY_CONCRETE);
        RecipeProvider.offerStonecuttingRecipe(exporter, ConcreteVSlabs.GRAY_CONCRETE_VERTICAL_SLAB, Blocks.GRAY_CONCRETE);
        RecipeProvider.offerStonecuttingRecipe(exporter, ConcreteVSlabs.BLACK_CONCRETE_VERTICAL_SLAB, Blocks.BLACK_CONCRETE);
        RecipeProvider.offerStonecuttingRecipe(exporter, ConcreteVSlabs.BROWN_CONCRETE_VERTICAL_SLAB, Blocks.BROWN_CONCRETE);
        RecipeProvider.offerStonecuttingRecipe(exporter, ConcreteVSlabs.RED_CONCRETE_VERTICAL_SLAB, Blocks.RED_CONCRETE);
        RecipeProvider.offerStonecuttingRecipe(exporter, ConcreteVSlabs.ORANGE_CONCRETE_VERTICAL_SLAB, Blocks.ORANGE_CONCRETE);
        RecipeProvider.offerStonecuttingRecipe(exporter, ConcreteVSlabs.YELLOW_CONCRETE_VERTICAL_SLAB, Blocks.YELLOW_CONCRETE);
        RecipeProvider.offerStonecuttingRecipe(exporter, ConcreteVSlabs.LIME_CONCRETE_VERTICAL_SLAB, Blocks.LIME_CONCRETE);
        RecipeProvider.offerStonecuttingRecipe(exporter, ConcreteVSlabs.GREEN_CONCRETE_VERTICAL_SLAB, Blocks.GREEN_CONCRETE);
        RecipeProvider.offerStonecuttingRecipe(exporter, ConcreteVSlabs.CYAN_CONCRETE_VERTICAL_SLAB, Blocks.CYAN_CONCRETE);
        RecipeProvider.offerStonecuttingRecipe(exporter, ConcreteVSlabs.LIGHT_BLUE_CONCRETE_VERTICAL_SLAB, Blocks.LIGHT_BLUE_CONCRETE);
        RecipeProvider.offerStonecuttingRecipe(exporter, ConcreteVSlabs.BLUE_CONCRETE_VERTICAL_SLAB, Blocks.BLUE_CONCRETE);
        RecipeProvider.offerStonecuttingRecipe(exporter, ConcreteVSlabs.PURPLE_CONCRETE_VERTICAL_SLAB, Blocks.PURPLE_CONCRETE);
        RecipeProvider.offerStonecuttingRecipe(exporter, ConcreteVSlabs.MAGENTA_CONCRETE_VERTICAL_SLAB, Blocks.MAGENTA_CONCRETE);
        RecipeProvider.offerStonecuttingRecipe(exporter, ConcreteVSlabs.PINK_CONCRETE_VERTICAL_SLAB, Blocks.PINK_CONCRETE);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassVSlabs.WHITE_GLASS_VERTICAL_SLAB, Blocks.WHITE_STAINED_GLASS);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassVSlabs.LIGHT_GRAY_GLASS_VERTICAL_SLAB, Blocks.LIGHT_GRAY_STAINED_GLASS);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassVSlabs.GRAY_GLASS_VERTICAL_SLAB, Blocks.GRAY_STAINED_GLASS);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassVSlabs.BLACK_GLASS_VERTICAL_SLAB, Blocks.BLACK_STAINED_GLASS);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassVSlabs.BROWN_GLASS_VERTICAL_SLAB, Blocks.BROWN_STAINED_GLASS);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassVSlabs.RED_GLASS_VERTICAL_SLAB, Blocks.RED_STAINED_GLASS);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassVSlabs.ORANGE_GLASS_VERTICAL_SLAB, Blocks.ORANGE_STAINED_GLASS);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassVSlabs.YELLOW_GLASS_VERTICAL_SLAB, Blocks.YELLOW_STAINED_GLASS);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassVSlabs.LIME_GLASS_VERTICAL_SLAB, Blocks.LIME_STAINED_GLASS);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassVSlabs.GREEN_GLASS_VERTICAL_SLAB, Blocks.GREEN_STAINED_GLASS);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassVSlabs.CYAN_GLASS_VERTICAL_SLAB, Blocks.CYAN_STAINED_GLASS);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassVSlabs.LIGHT_BLUE_GLASS_VERTICAL_SLAB, Blocks.LIGHT_BLUE_STAINED_GLASS);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassVSlabs.BLUE_GLASS_VERTICAL_SLAB, Blocks.BLUE_STAINED_GLASS);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassVSlabs.PURPLE_GLASS_VERTICAL_SLAB, Blocks.PURPLE_STAINED_GLASS);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassVSlabs.MAGENTA_GLASS_VERTICAL_SLAB, Blocks.MAGENTA_STAINED_GLASS);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassVSlabs.PINK_GLASS_VERTICAL_SLAB, Blocks.PINK_STAINED_GLASS);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassVSlabs.GLASS_VERTICAL_SLAB, Blocks.GLASS);
//        RecipeProvider.offerStonecuttingRecipe(exporter, RandomBlocks.BLACKSTONE_FURNACE, Blocks.BLACKSTONE);
//        RecipeProvider.offerStonecuttingRecipe(exporter, RandomBlocks.DEEPSLATE_FURNACE, Blocks.COBBLED_DEEPSLATE);
        RecipeProvider.offerStonecuttingRecipe(exporter, RandomBlocks.IRON_BAR_DOOR, Blocks.IRON_BLOCK, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, RandomBlocks.GOLD_BAR_DOOR, Blocks.GOLD_BLOCK, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, RandomBlocks.COPPER_BAR_DOOR, Blocks.COPPER_BLOCK, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, RandomBlocks.EXPOSED_COPPER_BAR_DOOR, Blocks.EXPOSED_COPPER, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, RandomBlocks.WEATHERED_COPPER_BAR_DOOR, Blocks.WEATHERED_COPPER, 2);
        RecipeProvider.offerStonecuttingRecipe(exporter, RandomBlocks.OXIDIZED_COPPER_BAR_DOOR, Blocks.OXIDIZED_COPPER, 2);

        ModRecipeProvider.offerDoorRecipe(exporter, RandomBlocks.IRON_BAR_DOOR, Items.IRON_INGOT);
        ModRecipeProvider.offerDoorRecipe(exporter, RandomBlocks.GOLD_BAR_DOOR, Items.GOLD_INGOT);
        ModRecipeProvider.offerDoorRecipe(exporter, RandomBlocks.COPPER_BAR_DOOR, Items.COPPER_INGOT);
//        offerChestRecipe(exporter, AcaciaWoodBlocks.ACACIA_CHEST, Blocks.ACACIA_PLANKS);
//        offerTrappedChestRecipe(exporter, AcaciaWoodBlocks.ACACIA_TRAPPED_CHEST, Blocks.ACACIA_PLANKS);
        ModRecipeProvider.offerChestRecipe(exporter, AzaleaWoodBlocks.AZALEA_CHEST, AzaleaWoodBlocks.AZALEA_PLANKS);
        ModRecipeProvider.offerTrappedChestRecipe(exporter, AzaleaWoodBlocks.AZALEA_TRAPPED_CHEST, AzaleaWoodBlocks.AZALEA_PLANKS);
        ModRecipeProvider.offerChestRecipe(exporter, BirchWoodBlocks.BIRCH_CHEST, Blocks.BIRCH_PLANKS);
        ModRecipeProvider.offerTrappedChestRecipe(exporter, BirchWoodBlocks.BIRCH_TRAPPED_CHEST, Blocks.BIRCH_PLANKS);
        ModRecipeProvider.offerChestRecipe(exporter, CrimsonWoodBlocks.CRIMSON_CHEST, Blocks.CRIMSON_PLANKS);
        ModRecipeProvider.offerTrappedChestRecipe(exporter, CrimsonWoodBlocks.CRIMSON_TRAPPED_CHEST, Blocks.CRIMSON_PLANKS);
        ModRecipeProvider.offerChestRecipe(exporter, DarkOakWoodBlocks.DARK_OAK_CHEST, Blocks.DARK_OAK_PLANKS);
        ModRecipeProvider.offerTrappedChestRecipe(exporter, DarkOakWoodBlocks.DARK_OAK_TRAPPED_CHEST, Blocks.DARK_OAK_PLANKS);
        ModRecipeProvider.offerChestRecipe(exporter, JungleWoodBlocks.JUNGLE_CHEST, Blocks.JUNGLE_PLANKS);
        ModRecipeProvider.offerTrappedChestRecipe(exporter, JungleWoodBlocks.JUNGLE_TRAPPED_CHEST, Blocks.JUNGLE_PLANKS);
        ModRecipeProvider.offerChestRecipe(exporter, MangroveWoodBlocks.MANGROVE_CHEST, Blocks.MANGROVE_PLANKS);
        ModRecipeProvider.offerTrappedChestRecipe(exporter, MangroveWoodBlocks.MANGROVE_TRAPPED_CHEST, Blocks.MANGROVE_PLANKS);
        ModRecipeProvider.offerChestRecipe(exporter, OakWoodBlocks.OAK_CHEST, Blocks.OAK_PLANKS);
        ModRecipeProvider.offerTrappedChestRecipe(exporter, OakWoodBlocks.OAK_TRAPPED_CHEST, Blocks.OAK_PLANKS);
        ModRecipeProvider.offerChestRecipe(exporter, SpruceWoodBlocks.SPRUCE_CHEST, Blocks.SPRUCE_PLANKS);
        ModRecipeProvider.offerTrappedChestRecipe(exporter, SpruceWoodBlocks.SPRUCE_TRAPPED_CHEST, Blocks.SPRUCE_PLANKS);
        ModRecipeProvider.offerChestRecipe(exporter, WarpedWoodBlocks.WARPED_CHEST, Blocks.WARPED_PLANKS);
        ModRecipeProvider.offerTrappedChestRecipe(exporter, WarpedWoodBlocks.WARPED_TRAPPED_CHEST, Blocks.WARPED_PLANKS);
        ModRecipeProvider.offerWaxableRecipe(exporter, WaxedCopperBlocks.WAXED_COPPER_BARS, CopperBlocks.COPPER_BARS);
        ModRecipeProvider.offerWaxableRecipe(exporter, WaxedCopperBlocks.WAXED_EXPOSED_COPPER_BARS, CopperBlocks.EXPOSED_COPPER_BARS);
        ModRecipeProvider.offerWaxableRecipe(exporter, WaxedCopperBlocks.WAXED_WEATHERED_COPPER_BARS, CopperBlocks.WEATHERED_COPPER_BARS);
        ModRecipeProvider.offerWaxableRecipe(exporter, WaxedCopperBlocks.WAXED_OXIDIZED_COPPER_BARS, CopperBlocks.OXIDIZED_COPPER_BARS);
        ModRecipeProvider.offerWaxableRecipe(exporter, WaxedCopperBlocks.WAXED_COPPER_CHAIN, CopperBlocks.COPPER_CHAIN);
        ModRecipeProvider.offerWaxableRecipe(exporter, WaxedCopperBlocks.WAXED_EXPOSED_COPPER_CHAIN, CopperBlocks.EXPOSED_COPPER_CHAIN);
        ModRecipeProvider.offerWaxableRecipe(exporter, WaxedCopperBlocks.WAXED_WEATHERED_COPPER_CHAIN, CopperBlocks.WEATHERED_COPPER_CHAIN);
        ModRecipeProvider.offerWaxableRecipe(exporter, WaxedCopperBlocks.WAXED_OXIDIZED_COPPER_CHAIN, CopperBlocks.OXIDIZED_COPPER_CHAIN);
        ModRecipeProvider.offerWaxableRecipe(exporter, WaxedCopperBlocks.WAXED_COPPER_LANTERN, CopperBlocks.COPPER_LANTERN);
        ModRecipeProvider.offerWaxableRecipe(exporter, WaxedCopperBlocks.WAXED_EXPOSED_COPPER_LANTERN, CopperBlocks.EXPOSED_COPPER_LANTERN);
        ModRecipeProvider.offerWaxableRecipe(exporter, WaxedCopperBlocks.WAXED_WEATHERED_COPPER_LANTERN, CopperBlocks.WEATHERED_COPPER_LANTERN);
        ModRecipeProvider.offerWaxableRecipe(exporter, WaxedCopperBlocks.WAXED_OXIDIZED_COPPER_LANTERN, CopperBlocks.OXIDIZED_COPPER_LANTERN);
        ModRecipeProvider.offerWaxableRecipe(exporter, WaxedCopperBlocks.WAXED_COPPER_PRESSURE_PLATE, CopperBlocks.COPPER_PRESSURE_PLATE);
        ModRecipeProvider.offerWaxableRecipe(exporter, WaxedCopperBlocks.WAXED_EXPOSED_COPPER_PRESSURE_PLATE, CopperBlocks.EXPOSED_COPPER_PRESSURE_PLATE);
        ModRecipeProvider.offerWaxableRecipe(exporter, WaxedCopperBlocks.WAXED_WEATHERED_COPPER_PRESSURE_PLATE, CopperBlocks.WEATHERED_COPPER_PRESSURE_PLATE);
        ModRecipeProvider.offerWaxableRecipe(exporter, WaxedCopperBlocks.WAXED_OXIDIZED_COPPER_PRESSURE_PLATE, CopperBlocks.OXIDIZED_COPPER_PRESSURE_PLATE);
        ModRecipeProvider.offerWaxableRecipe(exporter, WaxedCopperBlocks.WAXED_COPPER_BUTTON, CopperBlocks.COPPER_BUTTON);
        ModRecipeProvider.offerWaxableRecipe(exporter, WaxedCopperBlocks.WAXED_EXPOSED_COPPER_BUTTON, CopperBlocks.EXPOSED_COPPER_BUTTON);
        ModRecipeProvider.offerWaxableRecipe(exporter, WaxedCopperBlocks.WAXED_WEATHERED_COPPER_BUTTON, CopperBlocks.WEATHERED_COPPER_BUTTON);
        ModRecipeProvider.offerWaxableRecipe(exporter, WaxedCopperBlocks.WAXED_OXIDIZED_COPPER_BUTTON, CopperBlocks.OXIDIZED_COPPER_BUTTON);
        ModRecipeProvider.offerWaxableRecipe(exporter, WaxedCopperBlocks.WAXED_COPPER_DOOR, CopperBlocks.COPPER_DOOR);
        ModRecipeProvider.offerWaxableRecipe(exporter, WaxedCopperBlocks.WAXED_COPPER_TRAPDOOR, CopperBlocks.COPPER_TRAPDOOR);
        ModRecipeProvider.offerWaxableRecipe(exporter, WaxedCopperBlocks.WAXED_EXPOSED_COPPER_DOOR, CopperBlocks.EXPOSED_COPPER_DOOR);
        ModRecipeProvider.offerWaxableRecipe(exporter, WaxedCopperBlocks.WAXED_EXPOSED_COPPER_TRAPDOOR, CopperBlocks.EXPOSED_COPPER_TRAPDOOR);
        ModRecipeProvider.offerWaxableRecipe(exporter, WaxedCopperBlocks.WAXED_WEATHERED_COPPER_DOOR, CopperBlocks.WEATHERED_COPPER_DOOR);
        ModRecipeProvider.offerWaxableRecipe(exporter, WaxedCopperBlocks.WAXED_WEATHERED_COPPER_TRAPDOOR, CopperBlocks.WEATHERED_COPPER_TRAPDOOR);
        ModRecipeProvider.offerWaxableRecipe(exporter, WaxedCopperBlocks.WAXED_OXIDIZED_COPPER_DOOR, CopperBlocks.OXIDIZED_COPPER_DOOR);
        ModRecipeProvider.offerWaxableRecipe(exporter, WaxedCopperBlocks.WAXED_OXIDIZED_COPPER_TRAPDOOR, CopperBlocks.OXIDIZED_COPPER_TRAPDOOR);
        ModRecipeProvider.offerLanternRecipe(exporter, CopperBlocks.COPPER_LANTERN, Items.COPPER_INGOT);

        RecipeProvider.offerWallRecipe(exporter, GlassBlocks.GLASS_WALL, Blocks.GLASS);
        RecipeProvider.offerWallRecipe(exporter, GlassBlocks.WHITE_GLASS_WALL, Blocks.WHITE_STAINED_GLASS);
        RecipeProvider.offerWallRecipe(exporter, GlassBlocks.LIGHT_GRAY_GLASS_WALL, Blocks.LIGHT_GRAY_STAINED_GLASS);
        RecipeProvider.offerWallRecipe(exporter, GlassBlocks.GRAY_GLASS_WALL, Blocks.GRAY_STAINED_GLASS);
        RecipeProvider.offerWallRecipe(exporter, GlassBlocks.BLACK_GLASS_WALL, Blocks.BLACK_STAINED_GLASS);
        RecipeProvider.offerWallRecipe(exporter, GlassBlocks.BROWN_GLASS_WALL, Blocks.BROWN_STAINED_GLASS);
        RecipeProvider.offerWallRecipe(exporter, GlassBlocks.RED_GLASS_WALL, Blocks.RED_STAINED_GLASS);
        RecipeProvider.offerWallRecipe(exporter, GlassBlocks.ORANGE_GLASS_WALL, Blocks.ORANGE_STAINED_GLASS);
        RecipeProvider.offerWallRecipe(exporter, GlassBlocks.YELLOW_GLASS_WALL, Blocks.YELLOW_STAINED_GLASS);
        RecipeProvider.offerWallRecipe(exporter, GlassBlocks.LIME_GLASS_WALL, Blocks.LIME_STAINED_GLASS);
        RecipeProvider.offerWallRecipe(exporter, GlassBlocks.GREEN_GLASS_WALL, Blocks.GREEN_STAINED_GLASS);
        RecipeProvider.offerWallRecipe(exporter, GlassBlocks.CYAN_GLASS_WALL, Blocks.CYAN_STAINED_GLASS);
        RecipeProvider.offerWallRecipe(exporter, GlassBlocks.LIGHT_BLUE_GLASS_WALL, Blocks.LIGHT_BLUE_STAINED_GLASS);
        RecipeProvider.offerWallRecipe(exporter, GlassBlocks.BLUE_GLASS_WALL, Blocks.BLUE_STAINED_GLASS);
        RecipeProvider.offerWallRecipe(exporter, GlassBlocks.PURPLE_GLASS_WALL, Blocks.PURPLE_STAINED_GLASS);
        RecipeProvider.offerWallRecipe(exporter, GlassBlocks.MAGENTA_GLASS_WALL, Blocks.MAGENTA_STAINED_GLASS);
        RecipeProvider.offerWallRecipe(exporter, GlassBlocks.PINK_GLASS_WALL, Blocks.PINK_STAINED_GLASS);

        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.GLASS_WALL, Blocks.GLASS);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.WHITE_GLASS_WALL, Blocks.WHITE_STAINED_GLASS);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.LIGHT_GRAY_GLASS_WALL, Blocks.LIGHT_GRAY_STAINED_GLASS);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.GRAY_GLASS_WALL, Blocks.GRAY_STAINED_GLASS);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.BLACK_GLASS_WALL, Blocks.BLACK_STAINED_GLASS);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.BROWN_GLASS_WALL, Blocks.BROWN_STAINED_GLASS);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.RED_GLASS_WALL, Blocks.RED_STAINED_GLASS);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.ORANGE_GLASS_WALL, Blocks.ORANGE_STAINED_GLASS);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.YELLOW_GLASS_WALL, Blocks.YELLOW_STAINED_GLASS);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.LIME_GLASS_WALL, Blocks.LIME_STAINED_GLASS);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.GREEN_GLASS_WALL, Blocks.GREEN_STAINED_GLASS);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.CYAN_GLASS_WALL, Blocks.CYAN_STAINED_GLASS);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.LIGHT_BLUE_GLASS_WALL, Blocks.LIGHT_BLUE_STAINED_GLASS);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.BLUE_GLASS_WALL, Blocks.BLUE_STAINED_GLASS);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.PURPLE_GLASS_WALL, Blocks.PURPLE_STAINED_GLASS);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.MAGENTA_GLASS_WALL, Blocks.MAGENTA_STAINED_GLASS);
        RecipeProvider.offerStonecuttingRecipe(exporter, GlassBlocks.PINK_GLASS_WALL, Blocks.PINK_STAINED_GLASS);
        RecipeProvider.offerCarpetRecipe(exporter, LeafCarpets.OAK_LEAVES_CARPET, Blocks.OAK_LEAVES);
        RecipeProvider.offerCarpetRecipe(exporter, LeafCarpets.SPRUCE_LEAVES_CARPET, Blocks.SPRUCE_LEAVES);
        RecipeProvider.offerCarpetRecipe(exporter, LeafCarpets.BIRCH_LEAVES_CARPET, Blocks.BIRCH_LEAVES);
        RecipeProvider.offerCarpetRecipe(exporter, LeafCarpets.JUNGLE_LEAVES_CARPET, Blocks.JUNGLE_LEAVES);
        RecipeProvider.offerCarpetRecipe(exporter, LeafCarpets.ACACIA_LEAVES_CARPET, Blocks.ACACIA_LEAVES);
        RecipeProvider.offerCarpetRecipe(exporter, LeafCarpets.DARK_OAK_LEAVES_CARPET, Blocks.DARK_OAK_LEAVES);
        RecipeProvider.offerCarpetRecipe(exporter, LeafCarpets.MANGROVE_LEAVES_CARPET, Blocks.MANGROVE_LEAVES);
        RecipeProvider.offerStonecuttingRecipe(exporter, LeafCarpets.OAK_LEAVES_CARPET, Blocks.OAK_LEAVES);
        RecipeProvider.offerStonecuttingRecipe(exporter, LeafCarpets.SPRUCE_LEAVES_CARPET, Blocks.SPRUCE_LEAVES);
        RecipeProvider.offerStonecuttingRecipe(exporter, LeafCarpets.BIRCH_LEAVES_CARPET, Blocks.BIRCH_LEAVES);
        RecipeProvider.offerStonecuttingRecipe(exporter, LeafCarpets.JUNGLE_LEAVES_CARPET, Blocks.JUNGLE_LEAVES);
        RecipeProvider.offerStonecuttingRecipe(exporter, LeafCarpets.ACACIA_LEAVES_CARPET, Blocks.ACACIA_LEAVES);
        RecipeProvider.offerStonecuttingRecipe(exporter, LeafCarpets.DARK_OAK_LEAVES_CARPET, Blocks.DARK_OAK_LEAVES);
        RecipeProvider.offerStonecuttingRecipe(exporter, LeafCarpets.MANGROVE_LEAVES_CARPET, Blocks.MANGROVE_LEAVES);


        ShapedRecipeJsonBuilder.create(CopperBlocks.COPPER_PRESSURE_PLATE, 2)
                .pattern("   ").pattern("   ").pattern("###").input('#', Items.COPPER_INGOT)
                .criterion(RecipeProvider.hasItem(Items.COPPER_INGOT), RecipeProvider.conditionsFromItem(Items.COPPER_INGOT))
                .offerTo(exporter, new Identifier(RecipeProvider.getRecipeName(CopperBlocks.COPPER_PRESSURE_PLATE)));

    }
    private static CraftingRecipeJsonBuilder createBarRecipe(ItemConvertible output, Ingredient input) {
        return ShapedRecipeJsonBuilder.create(output, 16).input('#', input).pattern("   ").pattern("###").pattern("###");
    }

    private static void offerBarRecipe(Consumer<RecipeJsonProvider> exporter, ItemConvertible output, ItemConvertible input) {
        createBarRecipe(output, Ingredient.ofItems(new ItemConvertible[]{input})).criterion(RecipeProvider.hasItem(input), RecipeProvider.conditionsFromItem(input)).offerTo(exporter);
    }
}
